<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:bus_rode">

        <!-- 重要===设定listbox item的选中色样式-->
        <Style TargetType="ListBoxItem">
            <Style.Resources>
                <!--SelectedItem with focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" Opacity=".4"/>
                <!--SelectedItem without focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" Opacity=".4"/>
            </Style.Resources>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <!-- 设置触发器 -->
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#efefef"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="Background" Value="Coral"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <!-- *****************************************************************************************************************-->
        <!-- 线路模块中显示当前线路含有站台的模板-->
        <DataTemplate x:Key="ui_temp_form_line_have_stop_list">
            <Grid Width="auto" Height="80" Background="#00000000">
                <Grid.RowDefinitions >
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="4"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions >
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <!-- 线-->
                <Ellipse Fill="{Binding ui_stop_have_bus_number_color}" Stroke="White" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Width="20">
                    <Ellipse.ToolTip >
                        <StackPanel Orientation="Vertical" >
                            <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_stop_have_bus_number, StringFormat=当前车辆数：\{0\}辆}"/>
                            <TextBlock Foreground="Black" FontSize="15" Text="{Binding ui_stop_have_bus_message}"/>
                        </StackPanel>
                    </Ellipse.ToolTip>
                </Ellipse>

                <!-- 站台名-->
                <Grid Grid.Row="3" Grid.Column="1" Background="#00000000" Grid.ColumnSpan="3">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding ui_stop_name}" TextAlignment="Center">
                        <!-- 防止站台名过长看不完特加提示框-->
                        <TextBlock.ToolTip>
                            <ToolTip Background="white">
                                <Grid >
                                    <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_stop_name}"/>
                                </Grid>
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>

                </Grid>

            </Grid>
        </DataTemplate>

        <!-- 线路模块中显示当前地铁线路含有出口的模板-->
        <DataTemplate x:Key="ui_temp_form_line_subway_list">
            <Grid Height="100" Background="#00000000" Margin="10,0,10,0">
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 标题-->
                <Ellipse Height="30" Width="30" Grid.Row="0" Stroke="White" StrokeThickness="1" HorizontalAlignment="Left"/>
                <Grid Height="30" Width="30" Grid.Row="0" HorizontalAlignment="Left">
                    <Grid.Background>
                        <ImageBrush ImageSource="photo\stop.png"/>
                    </Grid.Background>
                </Grid>

                <!-- 出口名-->
                <TextBlock Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding ui_exit_name}" VerticalAlignment="Center">
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_exit_name}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>


                <!-- 出口通向-->
                <TextBlock Grid.Row="2" Foreground="white" FontSize="15" Text="{Binding ui_go_to}" VerticalAlignment="Center">
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_go_to}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
               </TextBlock>





            </Grid>
        </DataTemplate>

        <!-- 线路模块中显示当前线路的模板-->
        <DataTemplate x:Key="ui_temp_form_line_list">
            <Grid Width="260" Height="50" Background="#00000000">
                <Grid.RowDefinitions >
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>

                <!-- 边框-->
                <Grid Grid.Row="3" Background="white" Opacity="0.5"/>

                <TextBlock Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding ui_line_name}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_line_name}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>


            </Grid>
        </DataTemplate>

        <!-- 线路模块中显示当前搜索站台的模板-->
        <DataTemplate x:Key="ui_temp_form_line_search_stop_list">
            <Grid Width="260" Height="50" Background="#00000000">
                <Grid.RowDefinitions >
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <!-- 边框-->
                <Grid Grid.Row="5" Grid.ColumnSpan="2" Background="white" Opacity="0.5"/>

                <TextBlock Grid.Column="0" Foreground="white" FontSize="15" Text="{Binding ui_line_of_stop_name}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_line_of_stop_name}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>

                <TextBlock Grid.Column="1" Foreground="white" FontSize="12" Text="{Binding ui_line_of_stop_name_on_where}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_line_of_stop_name_on_where}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>


            </Grid>
        </DataTemplate>

        <!-- *****************************************************************************************************************-->
        <!-- 站台模块中显示站台经过车次的模板-->
        <DataTemplate x:Key="ui_temp_form_stop_cross_line_list">
            <Grid Height="100" Background="#00000000" Margin="10,0,10,0">
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 站台点-->
                <Grid Grid.Row="0" Width="20" HorizontalAlignment="Left">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>

                    <Grid Background="White" Grid.Row="0" Grid.RowSpan="2" Margin="0,8,0,10" HorizontalAlignment="Center" Width="5"/>
                    <Ellipse Fill="White" StrokeThickness="0" Grid.Row="1" Width="20" Height="20"/>
                </Grid>

                <!-- 文字-->
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Text="{Binding ui_stop_name}" FontSize="15" Foreground="White" />
                    <TextBlock Grid.Row="2" Text="{Binding ui_cross_line}" FontSize="12" Foreground="White" />
                </Grid>


                <!--<Grid.RowDefinitions >
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>

                -->
                <!-- 边框-->
                <!--
                <Grid Grid.Row="2" Background="white"/>

                -->
                <!-- 站台名-->
                <!--
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding ui_stop_name}" >
                        -->
                <!-- 防止名称过长看不完特加提示框-->
                <!--
                        <TextBlock.ToolTip>
                            <ToolTip Background="white">
                                <Grid >
                                    <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_stop_name}"/>
                                </Grid>
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </Grid>
                -->
                <!-- 经过车次-->
                <!--
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Foreground="white" FontSize="12" Text="{Binding ui_cross_line}" >
                        -->
                <!-- 防止名称过长看不完特加提示框-->
                <!--
                        <TextBlock.ToolTip>
                            <ToolTip Background="white">
                                <Grid >
                                    <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_cross_line}"/>
                                </Grid>
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </Grid>-->



            </Grid>
        </DataTemplate>

        <!-- 站台模块中显示真实站台的模板-->
        <DataTemplate x:Key="ui_temp_form_stop_realistic_stop_list">
            <Grid Height="150" Background="#00000000" Margin="10,0,10,0">
                <Grid.RowDefinitions >
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- 站台点-->
                <Grid Grid.Row="0" Width="auto" HorizontalAlignment="Left">
                    <Grid.RowDefinitions >
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Background="White" Grid.Row="0" Grid.RowSpan="2" Margin="0,8,0,10" HorizontalAlignment="Center" Width="5"/>
                    <Ellipse Grid.Column="0" Fill="white" StrokeThickness="0" Grid.Row="1" Width="20" Height="20"/>
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ui_line_name}" FontSize="15" Foreground="White" VerticalAlignment="Center" Margin="10,0,0,0" HorizontalAlignment="Left"/>
                </Grid>

                <!-- 文字-->
                <Grid Grid.Row="1">
                    <!--<Grid.ColumnDefinitions >
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>-->
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- up-->
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions >
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Ellipse StrokeThickness="0" Fill="{Binding ui_up_bk_color}" Width="10" Height="10" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Text="{Binding ui_up_line_toward}" FontSize="12" Foreground="White" Margin="5,0,0,0"/>
                        </StackPanel>
                        <TextBlock Grid.Row="2" Text="{Binding ui_up_line_describe_1}" FontSize="12" Foreground="White" />
                        <TextBlock Grid.Row="3" Text="{Binding ui_up_line_describe_2}" FontSize="12" Foreground="White" />
                    </Grid>

                    <!-- down-->
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions >
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Ellipse StrokeThickness="0" Fill="{Binding ui_down_bk_color}" Width="10" Height="10" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Text="{Binding ui_down_line_toward}" FontSize="12" Foreground="White" Margin="5,0,0,0"/>
                        </StackPanel>
                        <TextBlock Grid.Row="2" Text="{Binding ui_down_line_describe_1}" FontSize="12" Foreground="White" />
                        <TextBlock Grid.Row="3" Text="{Binding ui_down_line_describe_2}" FontSize="12" Foreground="White" />
                    </Grid>

                </Grid>

            </Grid>
        </DataTemplate>

        <!-- 站台模块中显示站台列表的模板-->
        <DataTemplate x:Key="ui_temp_form_stop_list">
            <Grid Width="260" Height="50" Background="#00000000">
                <Grid.RowDefinitions >
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>

                <!-- 边框-->
                <Grid Grid.Row="3" Background="white" Opacity="0.5"/>

                <TextBlock Grid.Row="1" Foreground="white" FontSize="15" Text="{Binding ui_stop_name}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_stop_name}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>


            </Grid>
        </DataTemplate>

        <!-- *****************************************************************************************************************-->
        <!-- 消息模块中显示消息列表的模板-->
        <DataTemplate x:Key="ui_temp_form_message_list">
            <Grid Width="250" Height="100" Background="#00000000">
                <Grid.ColumnDefinitions  >
                    <ColumnDefinition Width ="*"/>
                    <ColumnDefinition Width ="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions >
                    <RowDefinition Height=" auto"/>
                    <RowDefinition Height=" *"/>
                    <RowDefinition Height="2"/>
                </Grid.RowDefinitions>

                <!-- 边框-->
                <Grid Grid.Row="2" Grid.ColumnSpan="2" Background="white" Opacity="0.5"/>

                <!-- 标题-->
                <TextBlock Foreground="white" FontSize="20" Text="{Binding ui_msg_title}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_msg_title}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>

                <!-- 时间-->
                <TextBlock Grid.Column="1" Foreground="white" FontSize="15" Text="{Binding ui_msg_date}" >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_msg_date}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>

                <!-- 内容-->
                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Foreground="white" FontSize="15" Text="{Binding ui_msg_text}" TextWrapping="Wrap"  >
                        <!-- 防止名称过长看不完特加提示框-->
                    <TextBlock.ToolTip>
                        <ToolTip Background="white">
                            <Grid >
                                <TextBlock Foreground="black" FontSize="15" Text="{Binding ui_msg_text}"/>
                            </Grid>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>


            </Grid>
        </DataTemplate>

        <!-- *****************************************************************************************************************-->
        <!-- taditem控件的模板-->

        <Style TargetType="{x:Type TabItem}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid Background="#00000000" Width="100">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="2"/>
                            </Grid.RowDefinitions>
                            <TextBlock Foreground="White" FontSize="15" Text="{TemplateBinding Header}" TextAlignment="Center">
                                <TextBlock.ToolTip >
                                    <Grid >
                                        <TextBlock Foreground="black" FontSize="15" Text="{TemplateBinding Header}"/>
                                    </Grid>
                                </TextBlock.ToolTip>
                            </TextBlock>

                            <Grid Grid.Row="2" Background="{TemplateBinding Background}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers >
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#ffffffff"/>
                    <!--<Setter Property="Foreground" Value="#5f000000"/>-->
                </Trigger>
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" Value="#00000000"/>
                    <!--<Setter Property="Foreground" Value="#00000000"/>-->
                </Trigger>
            </Style.Triggers>
        </Style>



        <!-- 滚动条-->

        <!-- 滚动条模板-->
        <ControlTemplate x:Key="ScrollBarControlTemplateHorizontal" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" SnapsToDevicePixels="True" Height ="10">
                <Grid.ColumnDefinitions>
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <ColumnDefinition Width ="1E-05*"/>
                </Grid.ColumnDefinitions>
                <Grid Opacity="0.5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="5"/>
                    </Grid.ColumnDefinitions>
                    <Ellipse Fill="#ff7f7f7f" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="0"/>
                    <Rectangle x:Name="rectangle" Grid.Column="1" Grid.ColumnSpan="3" Fill="#ff7f7f7f" SnapsToDevicePixels="True" Height="10" StrokeThickness="0"/>
                    <Ellipse Fill="#ff7f7f7f" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="0"/>
                </Grid>
                <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="0"/>-->
                <!--<RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <!--<RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <Track x:Name="PART_Track" IsDirectionReversed="False" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="5"/>
                                                        <ColumnDefinition Width="5"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="0"/>
                                                    <Rectangle x:Name="rectangle" Grid.Column="1" Grid.ColumnSpan="3" Fill="#FF1e90ff" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" StrokeThickness="0"/>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="0"/>
                                                </Grid>
                                                <!--<Rectangle x:Name="rectangle" Fill="#FF1e90ff" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>-->
                                                <!--<ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>-->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
            <!--<ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <ControlTemplate x:Key="ScrollBarControlTemplate" TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Bg" SnapsToDevicePixels="True" Width="10">
                <Grid.RowDefinitions>
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <!--<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>-->
                    <RowDefinition Height="1E-05*"/>
                </Grid.RowDefinitions>
                <Grid Opacity="0.5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="5"/>
                    </Grid.RowDefinitions>
                    <Ellipse Fill="#ff7f7f7f" Grid.Row="0" Grid.RowSpan="2" StrokeThickness="0"/>
                    <Rectangle x:Name="rectangle" Grid.Row="1" Grid.RowSpan="3" Fill="#ff7f7f7f" SnapsToDevicePixels="True" Width="10" StrokeThickness="0"/>
                    <Ellipse Fill="#ff7f7f7f" Grid.Row="3" Grid.RowSpan="2" StrokeThickness="0"/>
                </Grid>
                <!--<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#3f7f7f7f" Grid.Row="0"/>-->
                <!--<RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowBottom" Data="M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <!--<RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}">
                    <RepeatButton.Style>
                        <Style TargetType="{x:Type RepeatButton}">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border x:Name="border" BorderBrush="#FFF0F0F0" BorderThickness="1" Background="#FFF0F0F0" SnapsToDevicePixels="True">
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FFDADADA"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF606060"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FF606060"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                <Setter Property="Background" TargetName="border" Value="#FFF0F0F0"/>
                                                <Setter Property="BorderBrush" TargetName="border" Value="#FFF0F0F0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </RepeatButton.Style>
                    <Path x:Name="ArrowTop" Data="M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z" Fill="#FF606060" Margin="3,4,3,3" Stretch="Uniform"/>
                </RepeatButton>-->
                <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="0">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb>
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="5"/>
                                                        <RowDefinition Height="5"/>
                                                    </Grid.RowDefinitions>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Row="0" Grid.RowSpan="2" StrokeThickness="0"/>
                                                    <Rectangle x:Name="rectangle" Grid.Row="1" Grid.RowSpan="3" Fill="#FF1e90ff" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" StrokeThickness="0"/>
                                                    <Ellipse Fill="#FF1e90ff" Grid.Row="3" Grid.RowSpan="2" StrokeThickness="0"/>
                                                </Grid>

                                                <!--<ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FFA6A6A6"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="rectangle" Value="#FF606060"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>-->
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                </Track>
            </Grid>
            <!--<ControlTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="White"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="Black"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Fill" TargetName="ArrowTop" Value="Black"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="ArrowTop" Value="#FFBFBFBF"/>
                    <Setter Property="Fill" TargetName="ArrowBottom" Value="#FFBFBFBF"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>

        <!-- 滚动条面板模板-->

        <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Template="{DynamicResource ScrollBarControlTemplate}"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Template="{DynamicResource ScrollBarControlTemplateHorizontal}"/>
            </Grid>
        </ControlTemplate>

        <!-- 滚动条样式style-->
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplateHorizontal}"/>
            <Style.Triggers >
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplateHorizontal}"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{StaticResource ScrollBarControlTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>




        <!-- 窗口-选择项目的模板-->
        <DataTemplate x:Key="ui_temp_window_select_item_list">
            <Grid Height="80">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- 选中圆圈-->
                <Grid Grid.Row="2" Grid.Column="0" Height="20" Width="20" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Ellipse Fill="#00000000" Stroke="#ff1e90ff"/>
                    <Ellipse Fill="{Binding pro_fill}" Stroke="#00000000" Margin="5"/>
                </Grid>


                <!-- 文本-->
                <Grid Grid.Row="1" Grid.RowSpan="3" Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="1" Foreground="black" FontSize="15" Text="{Binding pro_title}">
                        <TextBlock.ToolTip>
                            <Grid Background="White">
                                <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_title}"/>
                            </Grid>
                        </TextBlock.ToolTip>
                    </TextBlock>

                    <TextBlock Grid.Row="3" Foreground="black" FontSize="12" Text="{Binding pro_text}">
                        <TextBlock.ToolTip>
                            <Grid Background="White">
                                <TextBlock Foreground="Black" FontSize="15" Text="{Binding pro_text}"/>
                            </Grid>
                        </TextBlock.ToolTip>
                    </TextBlock>


                </Grid>

            </Grid>
        </DataTemplate>



        <!-- 按钮的各个样式-->

        <ControlTemplate x:Key="ButtonControlTemplate_green" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#ff3cb371" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <!--<Border.Effect>
        <DropShadowEffect BlurRadius="10" Color="#FFffffff" ShadowDepth="0" />
    </Border.Effect>-->
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff1c9351"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff007331"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonControlTemplate_blue" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#ff1e90ff" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <!--<Border.Effect>
        <DropShadowEffect BlurRadius="10" Color="#FFffffff" ShadowDepth="0" />
    </Border.Effect>-->
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff0070df"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff0050bf"/>
                </Trigger>


                <!--<Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff1e90ff"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="#ff7f7f7f"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ButtonControlTemplate_white" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#ffffffff" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <!--<Border.Effect>
        <DropShadowEffect BlurRadius="10" Color="#FFffffff" ShadowDepth="0" />
    </Border.Effect>-->
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ffcfcfcf"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ffafafaf"/>
                </Trigger>


                <!--<Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#ff1e90ff"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="#ff7f7f7f"/>
                </Trigger>-->
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- 滑条模板-->
        <ControlTemplate x:Key="SliderControlTemplate" TargetType="{x:Type Slider}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!--<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                    <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>-->
                    <!--<Border x:Name="TrackBackground" BorderBrush="#FFD6D6D6" BorderThickness="1" Background="#FFE7EAEA" Height="4" Margin="5,0" Grid.Row="1" VerticalAlignment="Center">
                        <Canvas Margin="-6,-1">
                            <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden"/>
                        </Canvas>
                    </Border>-->
                    <Grid Opacity="0.5" Height="4" Margin="5,0" Grid.Row="1" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        <Ellipse Fill="#ffffffff" Grid.Column="0" Grid.ColumnSpan="2" StrokeThickness="0"/>
                        <Rectangle x:Name="rectangle" Grid.Column="1" Grid.ColumnSpan="3" Fill="#ffffffff" SnapsToDevicePixels="True" Height="4" StrokeThickness="0"/>
                        <Ellipse Fill="#ffffffff" Grid.Column="3" Grid.ColumnSpan="2" StrokeThickness="0"/>
                    </Grid>

                    <Track x:Name="PART_Track" Grid.Row="1">
                        <!--<Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}">
                                <RepeatButton.Style>
                                    <Style TargetType="{x:Type RepeatButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </RepeatButton.Style>
                            </RepeatButton>
                        </Track.IncreaseRepeatButton>-->
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Focusable="False" Height="20" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="20">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                            <!--<Path x:Name="grip" Data="M0,0C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0z" Fill="#FF000000" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>-->
                                            <Ellipse Fill="#ff1e90ff" Stroke="White" Height="20" Width="20"/>
                                            <!--<TextBlock Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
                                        </Grid>
                                        <!--<ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="True">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>-->
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
            <!--<ControlTemplate.Triggers>
                <Trigger Property="TickPlacement" Value="TopLeft">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                    <Path x:Name="grip" Data="M0,6C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6z" Fill="#FFF0F0F0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="BottomRight">
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                    <Setter Property="Template" TargetName="Thumb">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                    <Path x:Name="grip" Data="M0,12C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12z" Fill="#FFF0F0F0" Stretch="Fill" SnapsToDevicePixels="True" Stroke="#FFACACAC" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FF7EB4EA"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging" Value="True">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FF569DE5"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                        <Setter Property="Stroke" TargetName="grip" Value="#FFD9D9D9"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
                </Trigger>
                <Trigger Property="TickPlacement" Value="Both">
                    <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                    <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
                </Trigger>
            </ControlTemplate.Triggers>-->
        </ControlTemplate>
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{StaticResource SliderControlTemplate}"/>
        </Style>

        <!-- 居中的tabcontorl style-->
        <!--
        <ControlTemplate x:Key="TabControlControlTemplate_middle_tabitem" TargetType="{x:Type TabControl}">
            <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                </Grid.RowDefinitions>
                <TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Center"/>
                <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TabStripPlacement" Value="Bottom">
                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                    <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Left">
                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                    <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                </Trigger>
                <Trigger Property="TabStripPlacement" Value="Right">
                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                    <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                    <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                    <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                    <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                    <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->

</ResourceDictionary>
